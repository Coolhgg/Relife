./auto-fix-unused.cjs:const fs = require('fs');
./auto-fix-unused.cjs:const path = require('path');
./auto-fix-unused.cjs:const { execSync } = require('child_process');
./cleanup-unused.cjs:const fs = require('fs');
./cleanup-unused.cjs:const path = require('path');
./cleanup-unused.cjs:const { execSync } = require('child_process');
./cleanup-unused.cjs:      const importLine = "const { execSync } = require('child_process');\n";
./comment-dead-code.cjs:const fs = require('fs');
./comment-dead-code.cjs:const path = require('path');
./fix-react-hooks-deps.cjs:const fs = require('fs');
./fix-react-hooks-deps.cjs:const path = require('path');
./fix-react-refresh-exports.cjs:const fs = require('fs');
./fix-react-refresh-exports.cjs:const path = require('path');
./fix-syntax-errors.cjs:const fs = require('fs');
./fix-syntax-errors.cjs:const path = require('path');
./fix-unused-vars.cjs:const fs = require('fs');
./fix-unused-vars.cjs:const path = require('path');
./fix-unused-vars.cjs:const { execSync } = require('child_process');
./fix-useless-catch.cjs:const fs = require('fs');
./fix-useless-catch.cjs:const path = require('path');
./scripts/analyze-language-quality.js:const fs = require('fs');
./scripts/check-notification-history.js:const fs = require('fs');
./scripts/check-pr-a11y.mjs:    const { execSync } = require('child_process');
./scripts/cleanup-quality-history.js:const fs = require('fs');
./scripts/generate-coverage-report.js:const fs = require('fs');
./scripts/generate-csv-reports.js:const fs = require('fs');
./scripts/generate-csv-reports.js:    const createCsvWriter = require('csv-writer').createObjectCsvWriter;
./scripts/generate-notification-content.js:const fs = require('fs');
./scripts/generate-notification-templates.js:const fs = require('fs');
./scripts/generate-pdf-reports.js:const fs = require('fs');
./scripts/generate-pdf-reports.js:    const puppeteer = require('puppeteer');
./scripts/generate-report-statistics.js:const fs = require('fs');
./scripts/generate-status-page.js:const fs = require('fs');
./scripts/generate-trends.js:const fs = require('fs');
./scripts/generate-trends.js:const path = require('path');
./scripts/setup-convertkit.js:} = require('../src/config/convertkit-config.ts');
./scripts/setup-convertkit.js:    const fs = require('fs');
./scripts/setup-convertkit.js:    const path = require('path');
./scripts/test-pwa-browsers.cjs:const fs = require('fs');
./scripts/test-pwa-browsers.cjs:const path = require('path');
./scripts/test-pwa-browsers.cjs:const _https = require('https');
./scripts/update-notification-history.js:const fs = require('fs');
./scripts/update-readme-status.js:const fs = require('fs');
./src/__tests__/config/test-sequencer.js:const Sequencer = require('@jest/test-sequencer').default;
./src/__tests__/config/test-sequencer.js:const path = require('path');
./src/__tests__/config/test-sequencer.js:const fs = require('fs');
./src/__tests__/setup/after-env-setup.ts:    enhancedServiceMocks = require('../mocks/enhanced-service-mocks');
./src/components/__tests__/AlarmRinging.test.tsx:      const { vibrate } = require('../../services/capacitor');
./src/components/__tests__/AlarmRinging.test.tsx:      const { VoiceService } = require('../../services/voice-pro');
./src/components/__tests__/AlarmRinging.test.tsx:      const { VoiceService } = require('../../services/voice-pro');
./src/components/__tests__/AlarmRinging.test.tsx:      const { VoiceService } = require('../../services/voice-pro');
./src/components/__tests__/AlarmRinging.test.tsx:      const { VoiceService } = require('../../services/voice-pro');
./src/components/__tests__/Dashboard.test.tsx:      const { PerformanceMonitor } = require('../../services/performance-monitor');
./src/components/__tests__/Dashboard.test.tsx:      const { PerformanceMonitor } = require('../../services/performance-monitor');
./src/components/__tests__/Dashboard.test.tsx:      const { AppAnalyticsService } = require('../../services/app-analytics');
./src/components/__tests__/Dashboard.test.tsx:      const { AppAnalyticsService } = require('../../services/app-analytics');
./src/components/__tests__/RootErrorBoundary.test.tsx:      const { ErrorHandler } = require('../../services/_error-handler');
./src/components/__tests__/RootErrorBoundary.test.tsx:    const { ErrorHandler } = require('../../services/_error-handler');
./src/components/__tests__/RootErrorBoundary.test.tsx:    const { ErrorHandler } = require('../../services/_error-handler');
./src/hooks/__tests__/edge-cases/useAuth.edge.test.ts:      const SupabaseService = require('../../../services/supabase-service').default;
./src/hooks/__tests__/edge-cases/useAuth.edge.test.ts:      const SupabaseService = require('../../../services/supabase-service').default;
./src/hooks/__tests__/edge-cases/useAuth.edge.test.ts:      const SupabaseService = require('../../../services/supabase-service').default;
./src/hooks/__tests__/edge-cases/useAuth.edge.test.ts:      const SupabaseService = require('../../../services/supabase-service').default;
./src/hooks/__tests__/edge-cases/useAuth.edge.test.ts:      const SupabaseService = require('../../../services/supabase-service').default;
./src/hooks/__tests__/edge-cases/useAuth.edge.test.ts:      const SupabaseService = require('../../../services/supabase-service').default;
./src/hooks/__tests__/edge-cases/useAuth.edge.test.ts:      const SupabaseService = require('../../../services/supabase-service').default;
./src/hooks/__tests__/edge-cases/useAuth.edge.test.ts:      const SupabaseService = require('../../../services/supabase-service').default;
./src/hooks/__tests__/edge-cases/useAuth.edge.test.ts:      const SupabaseService = require('../../../services/supabase-service').default;
./src/hooks/__tests__/edge-cases/useAuth.edge.test.ts:      const SupabaseService = require('../../../services/supabase-service').default;
./src/hooks/__tests__/edge-cases/useAuth.edge.test.ts:      const SupabaseService = require('../../../services/supabase-service').default;
./src/hooks/__tests__/edge-cases/useAuth.edge.test.ts:      const SecurityService = require('../../../services/security-service').default;
./src/hooks/__tests__/edge-cases/useAuth.edge.test.ts:      const SecurityService = require('../../../services/security-service').default;
./src/hooks/__tests__/edge-cases/useAuth.edge.test.ts:      const SupabaseService = require('../../../services/supabase-service').default;
./src/hooks/__tests__/edge-cases/useAuth.edge.test.ts:      const SupabaseService = require('../../../services/supabase-service').default;
./src/hooks/__tests__/edge-cases/usePWA.edge.test.ts:      const PWAManager = require('../../../services/pwa-manager').default;
./src/hooks/__tests__/edge-cases/usePWA.edge.test.ts:      const PWAManager = require('../../../services/pwa-manager').default;
./src/hooks/__tests__/edge-cases/usePWA.edge.test.ts:      const PWAManager = require('../../../services/pwa-manager').default;
./src/hooks/__tests__/edge-cases/usePWA.edge.test.ts:      const PWAManager = require('../../../services/pwa-manager').default;
./src/hooks/__tests__/edge-cases/useSubscription.edge.test.ts:      const StripeService = require('../../../services/stripe-service').default;
./src/hooks/__tests__/integration/cross-hook.integration.test.tsx:    const SupabaseService = require('../../../services/supabase-service').default;
./src/hooks/__tests__/integration/cross-hook.integration.test.tsx:    const AlarmService = require('../../../services/alarm-service').default;
./src/hooks/__tests__/integration/cross-hook.integration.test.tsx:        require('../../../services/subscription-service').default;
./src/hooks/__tests__/integration/cross-hook.integration.test.tsx:      const useAnalytics = require('../../useAnalytics').useAnalytics;
./src/hooks/__tests__/integration/cross-hook.integration.test.tsx:      const i18nConfig = require('../../../_config/i18n');
./src/hooks/__tests__/integration/cross-hook.integration.test.tsx:      const useAnalytics = require('../../useAnalytics').useAnalytics;
./src/hooks/__tests__/integration/cross-hook.integration.test.tsx:      const AlarmService = require('../../../services/alarm-service').default;
./src/hooks/__tests__/integration/cross-hook.integration.test.tsx:      const ErrorHandler = require('../../../services/_error-handler').ErrorHandler;
./src/hooks/__tests__/integration/cross-hook.integration.test.tsx:        require('../../../services/subscription-service').default;
./src/hooks/__tests__/integration/cross-hook.integration.test.tsx:        require('../../../services/subscription-service').default;
./src/hooks/__tests__/integration/useAuth.integration.test.tsx:    const SupabaseService = require('../../../services/supabase-service').default;
./src/hooks/__tests__/integration/useAuth.integration.test.tsx:      const useAnalytics = require('../../useAnalytics').useAnalytics;
./src/hooks/__tests__/integration/useAuth.integration.test.tsx:      const SupabaseService = require('../../../services/supabase-service').default;
./src/hooks/__tests__/integration/useAuth.integration.test.tsx:      const useAnalytics = require('../../useAnalytics').useAnalytics;
./src/hooks/__tests__/integration/useAuth.integration.test.tsx:      const SupabaseService = require('../../../services/supabase-service').default;
./src/hooks/__tests__/integration/useAuth.integration.test.tsx:      const useAnalytics = require('../../useAnalytics').useAnalytics;
./src/hooks/__tests__/integration/useAuth.integration.test.tsx:      const SupabaseService = require('../../../services/supabase-service').default;
./src/hooks/__tests__/integration/useAuth.integration.test.tsx:      const SupabaseService = require('../../../services/supabase-service').default;
./src/hooks/__tests__/integration/useAuth.integration.test.tsx:      const useTranslation = require('react-i18next').useTranslation;
./src/hooks/__tests__/integration/useAuth.integration.test.tsx:      const SupabaseService = require('../../../services/supabase-service').default;
./src/hooks/__tests__/integration/useAuth.integration.test.tsx:      const getCurrentLanguage = require('../../../_config/i18n').getCurrentLanguage;
./src/hooks/__tests__/integration/useAuth.integration.test.tsx:      const isRTL = require('../../../_config/i18n').isRTL;
./src/hooks/__tests__/integration/useAuth.integration.test.tsx:      const SecurityService = require('../../../services/security-service').default;
./src/hooks/__tests__/integration/useAuth.integration.test.tsx:      const SecurityService = require('../../../services/security-service').default;
./src/hooks/__tests__/integration/useAuth.integration.test.tsx:      const ErrorHandler = require('../../../services/_error-handler').ErrorHandler;
./src/hooks/__tests__/integration/useAuth.integration.test.tsx:      const SupabaseService = require('../../../services/supabase-service').default;
./src/hooks/__tests__/integration/useAuth.integration.test.tsx:        require('../../../services/subscription-service').default;
./src/hooks/__tests__/integration/useAuth.integration.test.tsx:      const useAnalytics = require('../../useAnalytics').useAnalytics;
./src/hooks/__tests__/integration/useAuth.integration.test.tsx:      const SupabaseService = require('../../../services/supabase-service').default;
./src/hooks/__tests__/integration/useFeatureGate.integration.test.tsx:      require('../../../services/subscription-service').default;
./src/hooks/__tests__/integration/useFeatureGate.integration.test.tsx:        require('../../../services/feature-gate-service').default;
./src/hooks/__tests__/integration/useFeatureGate.integration.test.tsx:      const useAnalytics = require('../../useAnalytics').useAnalytics;
./src/hooks/__tests__/integration/useFeatureGate.integration.test.tsx:        require('../../../services/subscription-service').default;
./src/hooks/__tests__/integration/useFeatureGate.integration.test.tsx:      const ErrorHandler = require('../../../services/_error-handler').ErrorHandler;
./src/hooks/__tests__/integration/useFeatureGate.integration.test.tsx:        require('../../../services/subscription-service').default;
./src/hooks/__tests__/integration/usePWA.integration.test.tsx:    const PWAManager = require('../../../services/pwa-manager').default;
./src/hooks/__tests__/integration/usePWA.integration.test.tsx:      require('../../../services/subscription-service').default;
./src/hooks/__tests__/integration/usePWA.integration.test.tsx:      const useAnalytics = require('../../useAnalytics').useAnalytics;
./src/hooks/__tests__/integration/usePWA.integration.test.tsx:      const PWAManager = require('../../../services/pwa-manager').default;
./src/hooks/__tests__/integration/usePWA.integration.test.tsx:      const useTranslation = require('react-i18next').useTranslation;
./src/hooks/__tests__/integration/usePWA.integration.test.tsx:      const i18nConfig = require('../../../_config/i18n');
./src/hooks/__tests__/integration/usePWA.integration.test.tsx:      const useAnalytics = require('../../useAnalytics').useAnalytics;
./src/hooks/__tests__/integration/usePWA.integration.test.tsx:      const PWAManager = require('../../../services/pwa-manager').default;
./src/hooks/__tests__/integration/usePWA.integration.test.tsx:      const ErrorHandler = require('../../../services/_error-handler').ErrorHandler;
./src/hooks/__tests__/integration/usePWA.integration.test.tsx:      const PWAManager = require('../../../services/pwa-manager').default;
./src/hooks/__tests__/integration/usePWA.integration.test.tsx:      const useTranslation = require('react-i18next').useTranslation;
./src/hooks/__tests__/integration/usePWA.integration.test.tsx:      const PWAManager = require('../../../services/pwa-manager').default;
./src/hooks/__tests__/integration/usePWA.integration.test.tsx:      const useAnalytics = require('../../useAnalytics').useAnalytics;
./src/hooks/__tests__/integration/usePWA.integration.test.tsx:      const useAnalytics = require('../../useAnalytics').useAnalytics;
./src/hooks/__tests__/integration/usePWA.integration.test.tsx:      const PWAManager = require('../../../services/pwa-manager').default;
./src/hooks/__tests__/integration/usePWA.integration.test.tsx:      const useAnalytics = require('../../useAnalytics').useAnalytics;
./src/hooks/__tests__/integration/usePWA.integration.test.tsx:      const useAnalytics = require('../../useAnalytics').useAnalytics;
./src/hooks/__tests__/integration/usePWA.integration.test.tsx:      const ErrorHandler = require('../../../services/_error-handler').ErrorHandler;
./src/hooks/__tests__/integration/usePWA.integration.test.tsx:      const PWAManager = require('../../../services/pwa-manager').default;
./src/hooks/__tests__/useAdvancedAlarms.test.ts:      const { AlarmService } = require('../../services/alarm');
./src/hooks/__tests__/useAuth.test.ts:    const { SupabaseService, supabase } = require('../../services/supabase');
./src/hooks/__tests__/useAuth.test.ts:    const SecurityService = require('../../services/security').default;
./src/hooks/__tests__/useAuth.test.ts:      const { SupabaseService } = require('../../services/supabase');
./src/hooks/__tests__/useAuth.test.ts:      const { SupabaseService } = require('../../services/supabase');
./src/hooks/__tests__/useAuth.test.ts:      const { SupabaseService } = require('../../services/supabase');
./src/hooks/__tests__/useAuth.test.ts:      const { SupabaseService } = require('../../services/supabase');
./src/hooks/__tests__/useAuth.test.ts:      const SecurityService = require('../../services/security').default;
./src/hooks/__tests__/useAuth.test.ts:      const { SupabaseService } = require('../../services/supabase');
./src/hooks/__tests__/useAuth.test.ts:      const { SupabaseService } = require('../../services/supabase');
./src/hooks/__tests__/useAuth.test.ts:      const { SupabaseService } = require('../../services/supabase');
./src/hooks/__tests__/useAuth.test.ts:      const SecurityService = require('../../services/security').default;
./src/hooks/__tests__/useAuth.test.ts:      const { SupabaseService, supabase } = require('../../services/supabase');
./src/hooks/__tests__/useAuth.test.ts:      const { SupabaseService } = require('../../services/supabase');
./src/hooks/__tests__/useAuth.test.ts:      const { supabase } = require('../../services/supabase');
./src/hooks/__tests__/useAuth.test.ts:      const { supabase } = require('../../services/supabase');
./src/hooks/__tests__/useAuth.test.ts:      const SecurityService = require('../../services/security').default;
./src/hooks/__tests__/useAuth.test.ts:      const { supabase } = require('../../services/supabase');
./src/hooks/__tests__/useAuth.test.ts:      const { supabase, SupabaseService } = require('../../services/supabase');
./src/hooks/__tests__/useAuth.test.ts:      const { SupabaseService } = require('../../services/supabase');
./src/hooks/__tests__/useAuth.test.ts:      const { SupabaseService, supabase } = require('../../services/supabase');
./src/hooks/__tests__/useAuth.test.ts:      const { SupabaseService, supabase } = require('../../services/supabase');
./src/hooks/__tests__/useAuth.test.ts:      const SecurityService = require('../../services/security').default;
./src/hooks/__tests__/useAuth.test.ts:      const { SupabaseService } = require('../../services/supabase');
./src/hooks/__tests__/useAuth.test.ts:      const AnalyticsService = require('../../services/analytics').default;
./src/hooks/__tests__/useAuth.test.ts:      const { SupabaseService } = require('../../services/supabase');
./src/hooks/__tests__/useAuth.test.ts:      const AnalyticsService = require('../../services/analytics').default;
./src/hooks/__tests__/useAuth.test.ts:      const { supabase } = require('../../services/supabase');
./src/hooks/__tests__/useAuth.test.ts:      const { supabase } = require('../../services/supabase');
./src/hooks/__tests__/useFeatureGate.test.ts:    const AnalyticsService = require('../../services/analytics').default;
./src/hooks/__tests__/useSubscription.test.ts:    const SubscriptionService = require('../../services/subscription-service').default;
./src/hooks/__tests__/useSubscription.test.ts:    const StripeService = require('../../services/stripe-service').default;
./src/hooks/__tests__/useSubscription.test.ts:        require('../../services/subscription-service').default;
./src/hooks/__tests__/useSubscription.test.ts:        require('../../services/subscription-service').default;
./src/hooks/__tests__/useSubscription.test.ts:        require('../../services/subscription-service').default;
./src/hooks/__tests__/useSubscription.test.ts:        require('../../services/subscription-service').default;
./src/hooks/__tests__/useSubscription.test.ts:        require('../../services/subscription-service').default;
./src/hooks/__tests__/useSubscription.test.ts:        require('../../services/subscription-service').default;
./src/hooks/__tests__/useSubscription.test.ts:        require('../../services/subscription-service').default;
./src/hooks/__tests__/useSubscription.test.ts:        require('../../services/subscription-service').default;
./src/hooks/__tests__/useSubscription.test.ts:        require('../../services/subscription-service').default;
./src/hooks/__tests__/useSubscription.test.ts:        require('../../services/subscription-service').default;
./src/hooks/__tests__/useSubscription.test.ts:        require('../../services/subscription-service').default;
./src/hooks/__tests__/useSubscription.test.ts:        require('../../services/subscription-service').default;
./src/hooks/__tests__/useSubscription.test.ts:      const AnalyticsService = require('../../services/analytics').default;
./src/hooks/__tests__/useSubscription.test.ts:      const AnalyticsService = require('../../services/analytics').default;
./src/services/__tests__/analytics.test.ts:      const originalConfig = require('../../_config/environment')._config;
./src/services/__tests__/error-handler.test.ts:      const { captureException, withScope } = require('@sentry/browser');
./src/services/__tests__/error-handler.test.ts:      const { withScope } = require('@sentry/browser');
./src/services/__tests__/error-handler.test.ts:      const posthog = require('posthog-js');
./src/services/__tests__/performance-monitor.test.ts:      const { getCLS, getFID, getFCP, getLCP, getTTFB } = require('web-vitals');
./src/services/__tests__/performance-monitor.test.ts:      const { getCLS } = require('web-vitals');
./src/services/__tests__/performance-monitor.test.ts:      const { getFID } = require('web-vitals');
./src/services/__tests__/performance-monitor.test.ts:      const webVitals = require('web-vitals');
./src/services/__tests__/test-setup.ts:      const serviceModule = require(
./test-syntax.js:const fs = require('fs');
./test-syntax.js:const path = require('path');
./tests/utils/integration-test-setup.ts:  } = require('./test-mocks');
./tests/utils/integration-test-setup.ts:  const { http, HttpResponse } = require('msw');
./tests/utils/integration-test-setup.ts:  const { http, HttpResponse } = require('msw');
./tests/utils/integration-test-setup.ts:  const { http, HttpResponse } = require('msw');
./tests/utils/integration-test-setup.ts:    const { mockWebSocket } = require('./test-mocks');
./tests/utils/integration-test-setup.ts:  const { http, HttpResponse } = require('msw');
./tests/utils/integration-test-setup.ts:  const { http, HttpResponse } = require('msw');
./tests/utils/integration-test-setup.ts:  const enhancedMocks = require('./test-mocks');
