{
  "name": "relife-alarm",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "prepare": "husky install",
    "setup": "./scripts/post-consolidation-setup.sh",
    "docs": "echo 'Opening documentation index...' && open DOCUMENTATION_INDEX.md || cat DOCUMENTATION_INDEX.md",
    "dev": "vite",
    "dev:email": "cd relife-campaign-dashboard && bun run dev",
    "build:email": "cd relife-campaign-dashboard && bun run build",
    "build": "tsc -b && vite build",
    "lint": "eslint . && prettier --check .",
    "lint:eslint": "eslint .",
    "lint:prettier": "prettier --check .",
    "lint:fix": "eslint . --fix && prettier --write .",
    "preview": "vite preview",
    "test": "vitest run",
    "test:watch": "vitest",
    "test:coverage": "vitest run --coverage",
    "test:ui": "vitest --ui",
    "test:mobile:mock": "USE_REAL_DEVICE=false vitest run --config vitest.config.ts",
    "test:mobile:device": "USE_REAL_DEVICE=true vitest run --config vitest.config.ts",
    "test:mobile:watch": "USE_REAL_DEVICE=false vitest --config vitest.config.ts",
    "test:mobile:coverage": "USE_REAL_DEVICE=false vitest run --coverage --config vitest.config.ts",
    "test:mobile:smoke": "USE_REAL_DEVICE=true vitest run tests/smoke/ --config vitest.config.ts",
    "test:pwa": "node scripts/test-pwa-browsers.cjs",
    "test:lighthouse": "cd test-pwa && ./run-lighthouse.sh",
    "test:e2e": "playwright test",
    "test:e2e:headed": "playwright test --headed",
    "test:e2e:debug": "playwright test --debug",
    "test:e2e:ui": "playwright test --ui",
    "test:e2e:report": "playwright show-report",
    "test:e2e:install": "playwright install",
    "test:e2e:codegen": "playwright codegen localhost:4173",
    "test:e2e:mobile": "playwright test --project=\"Mobile Chrome\" --project=\"Mobile Safari\"",
    "test:mobile:e2e:device": "USE_REAL_DEVICE=true playwright test --project=\"Mobile Chrome\" --project=\"Mobile Safari\"",
    "test:detox:android": "detox test -c android.emu.debug",
    "test:detox:ios": "detox test -c ios.sim.debug",
    "test:detox:build:android": "detox build -c android.emu.debug",
    "test:detox:build:ios": "detox build -c ios.sim.debug",
    "test:e2e:desktop": "playwright test --project=chromium --project=firefox --project=webkit",
    "test:e2e:ci": "playwright test --reporter=github",
    "cap:add:android": "npx cap add android",
    "cap:add:ios": "npx cap add ios",
    "cap:sync": "npx cap sync",
    "cap:sync:android": "npx cap sync android",
    "cap:sync:ios": "npx cap sync ios",
    "cap:open:android": "npx cap open android",
    "cap:open:ios": "npx cap open ios",
    "cap:run:android": "npx cap run android",
    "cap:run:ios": "npx cap run ios",
    "cap:build:android": "npm run build && npx cap sync android && npx cap open android",
    "cap:build:ios": "npm run build && npx cap sync ios && npx cap open ios",
    "mobile:setup": "npm run build && npx cap add android && npx cap add ios && npx cap sync",
    "mobile:dev:android": "npm run build && npx cap sync android && npx cap run android --livereload --external",
    "mobile:dev:ios": "npm run build && npx cap sync ios && npx cap run ios --livereload --external",
    "services:setup": "./scripts/setup-external-services.sh",
    "services:validate": "node scripts/validate-external-services.js",
    "services:monitor": "docker-compose up -d",
    "services:monitor:stop": "docker-compose down",
    "services:monitor:logs": "docker-compose logs -f",
    "sign:android": "./scripts/generate-android-keystore.sh",
    "sign:ios": "./scripts/setup-ios-signing.sh",
    "sign:validate": "./scripts/validate-mobile-signing.sh",
    "build:android:release": "npm run build && npx cap sync android && cd android && ./gradlew assembleRelease",
    "build:android:bundle": "npm run build && npx cap sync android && cd android && ./gradlew bundleRelease",
    "build:ios:archive": "npm run build && npx cap sync ios",
    "ci:validate": "npm run lint && npx tsc --noEmit && npm run test:coverage && npm run build",
    "ci:build": "npm run build && npx cap sync",
    "ci:test": "npm run test:coverage && npm run test:integration:coverage && npm run test:pwa && npm run test:e2e:ci",
    "ci:test:mobile": "npm run test:mobile:coverage && npm run test:integration:coverage && npm run test:e2e:mobile",
    "ci:test:integration": "npm run test:integration:ci",
    "format": "prettier --write \"src/**/*.{ts,tsx,js,jsx,css,md,json}\"",
    "format:check": "prettier --check \"src/**/*.{ts,tsx,js,jsx,css,md,json}\"",
    "quality:check": "npm run lint && npm run type-check && python -m black --check . && python -m isort --check-only . && python -m flake8 .",
    "quality:fix": "npm run lint:fix && python -m black . && python -m isort .",
    "type-check": "npx tsc --noEmit",
    "api:dev": "tsx watch server/api.ts",
    "api:build": "tsc --project server/tsconfig.json",
    "api:start": "node server/dist/api.js",
    "translations:validate": "node scripts/manage-translations.mjs validate",
    "translations:generate": "node scripts/manage-translations.mjs generate",
    "translations:setup": "node scripts/manage-translations.mjs setup",
    "translations:report": "node scripts/manage-translations.mjs report",
    "mixed-scripts:validate": "node scripts/validate-mixed-scripts.js validate",
    "mixed-scripts:update": "node scripts/validate-mixed-scripts.js update-ignore",
    "mixed-scripts:report": "node scripts/validate-mixed-scripts.js report",
    "persona:analyze": "node scripts/persona-optimizer.js analyze",
    "persona:optimize": "node scripts/persona-optimizer.js analyze",
    "persona:dashboard": "echo 'Start Storybook and navigate to Persona Dashboard story'",
    "storybook": "storybook dev -p 6006",
    "build-storybook": "storybook build",
    "chromatic": "npx chromatic",
    "chromatic:ci": "npx chromatic --ci",
    "visual-test": "npm run build-storybook && npm run chromatic",
    "test:a11y:unit": "vitest run --config vitest.config.ts src/**/*.a11y.test.{ts,tsx}",
    "test:a11y:unit:watch": "vitest --config vitest.config.ts src/**/*.a11y.test.{ts,tsx}",
    "test:a11y:e2e": "playwright test tests/e2e/a11y/ --reporter=list",
    "test:a11y:e2e:ui": "playwright test tests/e2e/a11y/ --ui",
    "test:a11y:lighthouse": "lhci autorun",
    "test:a11y:pa11y": "pa11y-ci",
    "test:a11y:all": "npm run test:a11y:unit && npm run test:a11y:e2e && npm run test:a11y:lighthouse && npm run test:a11y:pa11y",
    "test:integration": "vitest run --config vitest.integration.config.ts",
    "test:integration:watch": "vitest --config vitest.integration.config.ts",
    "test:integration:coverage": "vitest run --coverage --config vitest.integration.config.ts",
    "test:integration:ui": "vitest --ui --config vitest.integration.config.ts",
    "test:integration:debug": "vitest --inspect --config vitest.integration.config.ts",
    "test:integration:ci": "vitest run --reporter=github --config vitest.integration.config.ts",
    "a11y:baseline": "node scripts/generate-a11y-baseline.mjs",
    "a11y:report": "node scripts/generate-a11y-report.mjs",
    "a11y:gate": "node scripts/check-pr-a11y.mjs",
    "a11y:gate:verbose": "node scripts/check-pr-a11y.mjs --verbose",
    "test:perf:baseline": "docker run --rm -v $(pwd):/workspace grafana/k6 run /workspace/performance/k6/baseline-smoke-test.js",
    "test:perf:baseline:ci": "docker run --rm -v $(pwd):/workspace grafana/k6 run --out json=/workspace/performance/reports/baseline-results.json /workspace/performance/k6/baseline-smoke-test.js",
    "test:perf:validation": "docker run --rm -v $(pwd):/workspace grafana/k6 run /workspace/performance/k6/validation-test.js",
    "test:perf:load": "docker run --rm -v $(pwd):/workspace grafana/k6 run --out html=/workspace/performance/reports/alarm-lifecycle-report.html /workspace/performance/k6/alarm-lifecycle-load-test.js",
    "test:perf:stress": "docker run --rm -v $(pwd):/workspace grafana/k6 run --out html=/workspace/performance/reports/critical-endpoints-report.html /workspace/performance/k6/critical-endpoints-stress-test.js",
    "test:perf:soak": "docker run --rm -v $(pwd):/workspace grafana/k6 run --out html=/workspace/performance/reports/soak-endurance-report.html /workspace/performance/k6/soak-endurance-test.js",
    "test:perf:lighthouse": "lhci autorun --config=lighthouserc.js",
    "test:perf:lighthouse:full": "lhci autorun --config=lighthouserc.perf.js",
    "test:perf:all": "npm run test:perf:baseline:ci && npm run test:perf:load && npm run test:perf:lighthouse:full",
    "test:perf:ci": "npm run test:perf:baseline:ci && npm run test:perf:validation && npm run test:perf:lighthouse:full && npm run test:perf:report",
    "test:perf:full-suite": "npm run test:perf:load && npm run test:perf:stress && npm run test:perf:soak && npm run test:perf:lighthouse:full && npm run test:perf:report",
    "test:perf:report": "node scripts/generate-perf-report.mjs",
    "quality:fix:intelligent": "node scripts/intelligent-eslint-fix.js --verbose",
    "quality:hooks:check": "node scripts/react-hooks-enforcer.js --verbose",
    "quality:hooks:strict": "node scripts/react-hooks-enforcer.js --strict --verbose",
    "quality:full-check": "bun run type-check && bun run quality:fix:intelligent && bun run quality:hooks:check && bun run format",
    "pre-commit:test": ".husky/pre-commit-enhanced",
    "commit:enhanced": "bun run pre-commit:test && git commit"
  },
  "lint-staged": {
    "*.{ts,tsx}": [
      "node scripts/intelligent-eslint-fix.js",
      "prettier --write",
      "git add"
    ],
    "*.{js,jsx}": [
      "eslint --fix",
      "prettier --write",
      "git add"
    ],
    "*.{json,css,scss,html,md,yml,yaml}": [
      "prettier --write",
      "git add"
    ],
    "*.py": [
      "python -m black",
      "python -m isort",
      "python -m flake8"
    ],
    "*.sh": [
      "shellcheck --severity=error"
    ],
    "**/locales/**/*.json": [
      "node scripts/manage-translations.mjs validate"
    ],
    "src/**/*.{ts,tsx}": [
      "node scripts/react-hooks-enforcer.js --max-warnings 0"
    ]
  },
  "bundlesize": [
    {
      "path": "dist/assets/*.js",
      "maxSize": "500kb"
    },
    {
      "path": "dist/assets/*.css",
      "maxSize": "100kb"
    },
    {
      "path": "dist/index.html",
      "maxSize": "50kb"
    }
  ],
  "dependencies": {
    "@capacitor/android": "^7.4.2",
    "@capacitor/cli": "^7.4.2",
    "@capacitor/core": "^7.4.2",
    "@capacitor/device": "^7.0.2",
    "@capacitor/geolocation": "^7.1.5",
    "@capacitor/haptics": "^7.0.2",
    "@capacitor/ios": "^7.4.2",
    "@capacitor/local-notifications": "^7.0.2",
    "@capacitor/preferences": "^7.0.2",
    "@capacitor/push-notifications": "^7.0.2",
    "@capacitor/splash-screen": "^7.0.2",
    "@capacitor/status-bar": "^7.0.2",
    "@headlessui/react": "^2.2.7",
    "@heroicons/react": "^2.2.0",
    "@radix-ui/react-accordion": "^1.2.12",
    "@radix-ui/react-alert-dialog": "^1.1.15",
    "@radix-ui/react-aspect-ratio": "^1.1.7",
    "@radix-ui/react-avatar": "^1.1.10",
    "@radix-ui/react-checkbox": "^1.3.3",
    "@radix-ui/react-collapsible": "^1.1.12",
    "@radix-ui/react-context-menu": "^2.2.16",
    "@radix-ui/react-dialog": "^1.1.15",
    "@radix-ui/react-dropdown-menu": "^2.1.16",
    "@radix-ui/react-hover-card": "^1.1.15",
    "@radix-ui/react-label": "^2.1.7",
    "@radix-ui/react-menubar": "^1.1.16",
    "@radix-ui/react-navigation-menu": "^1.2.14",
    "@radix-ui/react-popover": "^1.1.15",
    "@radix-ui/react-progress": "^1.1.7",
    "@radix-ui/react-radio-group": "^1.3.8",
    "@radix-ui/react-scroll-area": "^1.2.10",
    "@radix-ui/react-select": "^2.2.6",
    "@radix-ui/react-separator": "^1.1.7",
    "@radix-ui/react-slider": "^1.3.6",
    "@radix-ui/react-slot": "^1.2.3",
    "@radix-ui/react-switch": "^1.2.6",
    "@radix-ui/react-tabs": "^1.1.13",
    "@radix-ui/react-toggle": "^1.1.10",
    "@radix-ui/react-toggle-group": "^1.1.11",
    "@radix-ui/react-tooltip": "^1.2.8",
    "@sentry/react": "^10.5.0",
    "@sentry/tracing": "^7.120.4",
    "@stripe/stripe-js": "^7.8.0",
    "@supabase/supabase-js": "^2.54.0",
    "@tanstack/react-query": "^5.85.5",
    "@types/node": "^24.3.0",
    "@types/react-window": "^1.8.8",
    "ajv": "^6.12.6",
    "class-variance-authority": "^0.7.1",
    "cmdk": "^1.1.1",
    "cors": "^2.8.5",
    "crypto-js": "^4.2.0",
    "date-fns": "^4.1.0",
    "dompurify": "^3.2.6",
    "dotenv": "^17.2.1",
    "embla-carousel-react": "^8.6.0",
    "express": "^5.1.0",
    "framer-motion": "^12.23.12",
    "i18next": "^25.3.6",
    "i18next-browser-languagedetector": "^8.2.0",
    "i18next-http-backend": "^3.0.2",
    "input-otp": "^1.4.2",
    "lucide-react": "^0.539.0",
    "next-themes": "^0.4.6",
    "posthog-js": "^1.259.0",
    "react": "^19.1.1",
    "react-day-picker": "^9.8.1",
    "react-dom": "^19.1.1",
    "react-hook-form": "^7.62.0",
    "react-i18next": "^15.6.1",
    "react-resizable-panels": "^3.0.4",
    "react-window": "^1.8.11",
    "recharts": "^3.1.2",
    "semver": "^7.6.3",
    "sonner": "^2.0.7",
    "stripe": "^18.4.0",
    "tailwind-merge": "^3.3.1",
    "tsx": "^4.20.4",
    "vaul": "^1.1.2",
    "whatwg-url": "^14.2.0",
    "zxcvbn": "^4.4.2"
  },
  "devDependencies": {
    "@axe-core/playwright": "^4.10.2",
    "@chromatic-com/storybook": "^4.1.0",
    "@cloudflare/workers-types": "^4.20250819.0",
    "@commitlint/cli": "^18.0.0",
    "@commitlint/config-conventional": "^18.0.0",
    "@eslint/js": "^9.33.0",
    "@faker-js/faker": "^9.9.0",
    "@lhci/cli": "^0.15.1",
    "@playwright/test": "^1.54.2",
    "@redux-devtools/extension": "^3.3.0",
    "@storybook/addon-a11y": "^9.1.2",
    "@storybook/addon-actions": "^9.0.8",
    "@storybook/addon-backgrounds": "^9.0.8",
    "@storybook/addon-controls": "^9.0.8",
    "@storybook/addon-docs": "^9.1.2",
    "@storybook/addon-measure": "^9.0.8",
    "@storybook/addon-onboarding": "^9.1.2",
    "@storybook/addon-outline": "^9.0.8",
    "@storybook/addon-toolbars": "^9.0.8",
    "@storybook/addon-viewport": "^9.0.8",
    "@storybook/addon-vitest": "^9.1.2",
    "@storybook/react-vite": "^9.1.2",
    "@testing-library/dom": "^10.4.1",
    "@testing-library/jest-dom": "^6.7.0",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/cors": "^2.8.17",
    "@types/crypto-js": "^4.2.2",
    "@types/dompurify": "^3.2.0",
    "@types/express": "^5.0.2",
    "@types/react": "^19.1.9",
    "@types/react-dom": "^19.1.7",
    "@types/zxcvbn": "^4.4.5",
    "@vitejs/plugin-react": "^4.7.0",
    "@vitest/coverage-v8": "^3.2.4",
    "@vitest/ui": "^3.2.4",
    "autoprefixer": "^10.4.21",
    "axe-core": "^4.10.3",
    "chromatic": "^13.1.3",
    "detox": "^20.40.2",
    "detox-cli": "^20.0.0",
    "eslint": "^9.32.0",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "^5.2.0",
    "eslint-plugin-react-refresh": "^0.4.20",
    "eslint-plugin-storybook": "^9.1.2",
    "globals": "^16.3.0",
    "happy-dom": "^18.0.1",
    "husky": "^8.0.3",
    "jest-axe": "^10.0.0",
    "jsdom": "^26.1.0",
    "lint-staged": "^15.0.0",
    "msw": "^2.10.5",
    "pa11y": "^9.0.0",
    "pa11y-ci": "^4.0.1",
    "postcss": "^8.5.6",
    "prettier": "^3.0.0",
    "react-router-dom": "^7.8.0",
    "resize-observer-polyfill": "^1.5.1",
    "rollup-plugin-visualizer": "^6.0.3",
    "storybook": "^9.1.2",
    "tailwindcss": "^4.1.11",
    "typescript": "~5.8.3",
    "typescript-eslint": "^8.39.0",
    "vite": "^7.1.0",
    "vitest": "^3.2.4"
  }
}
