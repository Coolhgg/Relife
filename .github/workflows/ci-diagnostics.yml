name: "CI Diagnostics"

on:
  workflow_dispatch:

permissions:
  contents: read
  actions: read
  checks: read

env:
  CI_COMMANDS: >-
    bun install && bun run lint && bun run type-check && bun run test && bun run build

jobs:
  diagnostics:
    name: Diagnostics
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          check-latest: true

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: "1.2.19"

      - name: Print tool versions
        run: |
          echo "node: $(node -v || true)"
          echo "npm:  $(npm -v || true)"
          echo "bun:  $(bun -v || true)"
          echo "pnpm: $(pnpm -v || true)"
          echo "yarn: $(yarn -v || true)"

      - name: Hash lockfiles
        run: |
          echo "Lockfile checksums:" > diag-summary.txt
          find . -maxdepth 3 -type f \( -name "bun.lock" -o -name "bun.lockb" -o -name "package-lock.json" -o -name "pnpm-lock.yaml" -o -name "yarn.lock" \) -print0 | xargs -0 -I{} shasum "{}" | tee -a diag-summary.txt || true

      - name: Run CI commands
        run: |
          set -o pipefail
          echo "Command: ${CI_COMMANDS}" >> diag-summary.txt
          echo "Started: $(date -u +%Y-%m-%dT%H:%M:%SZ)" >> diag-summary.txt
          { ${CI_COMMANDS} 2>ci-stderr.log | tee ci-stdout.log; } ; ec=$?
          echo "Finished: $(date -u +%Y-%m-%dT%H:%M:%SZ)" >> diag-summary.txt
          echo "exit_code=${ec}" >> diag-summary.txt
          exit 0

      - name: Upload diagnostics
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ci-diagnostics-logs
          path: |
            ci-stdout.log
            ci-stderr.log
            diag-summary.txt
