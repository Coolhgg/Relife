# Redis Configuration for Relife Smart Alarm App
# Optimized for performance monitoring data and session storage

################################## NETWORK #####################################

# Accept connections from any IP address
bind 0.0.0.0

# Disable protected mode for Docker environments
protected-mode no

# Port to listen on
port 6379

# TCP listen() backlog
tcp-backlog 511

# Close connections after N seconds of idle time
timeout 300

# TCP keepalive
tcp-keepalive 300

################################# TLS/SSL ######################################

# TLS/SSL configuration (uncomment if using SSL)
# tls-port 6380
# tls-cert-file /etc/ssl/redis.crt
# tls-key-file /etc/ssl/redis.key
# tls-ca-cert-file /etc/ssl/ca.crt

################################# GENERAL #####################################

# Run as daemon
daemonize no

# Log level (debug, verbose, notice, warning)
loglevel notice

# Log file (empty string means stdout)
logfile ""

# Number of databases
databases 16

################################ SNAPSHOTTING  ################################

# Save snapshots for persistence
save 900 1    # Save if at least 1 key changed in 900 seconds
save 300 10   # Save if at least 10 keys changed in 300 seconds
save 60 10000 # Save if at least 10000 keys changed in 60 seconds

# Compress string objects using LZF when dump .rdb databases
rdbcompression yes

# Checksum the RDB file
rdbchecksum yes

# RDB filename
dbfilename dump.rdb

# Working directory for RDB files
dir /data

################################# REPLICATION #################################

# Master-slave replication configuration
# slaveof <masterip> <masterport>

# Slave read-only mode
slave-read-only yes

################################## SECURITY ###################################

# Require clients to authenticate
# requirepass yourpasswordhere

# Disable dangerous commands in production
rename-command FLUSHDB ""
rename-command FLUSHALL ""
rename-command EVAL ""
rename-command DEBUG ""
rename-command CONFIG "CONFIG_b835e4c5f7e8c5d8a6e2f3a4b6c9d1e7"

################################### CLIENTS ####################################

# Max number of connected clients
maxclients 10000

############################## MEMORY MANAGEMENT #############################

# Max memory usage (adjust based on your needs)
maxmemory 256mb

# Memory eviction policy
# allkeys-lru: remove any key according to the LRU algorithm
# volatile-lru: remove keys with expire set according to LRU
# allkeys-random: remove any key randomly
# volatile-random: remove keys with expire set randomly  
# volatile-ttl: remove keys with expire set, try to remove keys with shorter TTL first
# noeviction: don't expire at all, return error on write operations
maxmemory-policy allkeys-lru

# Sample size for LRU eviction
maxmemory-samples 5

############################# LAZY FREEING ####################################

# Lazy freeing for better performance
lazyfree-lazy-eviction yes
lazyfree-lazy-expire yes
lazyfree-lazy-server-del yes
slave-lazy-flush yes

############################ KERNEL OOM CONTROL ##############################

# OOM score adjustment (Linux only)
oom-score-adj no

######################### KERNEL TRANSPARENT HUGEPAGE #########################

# Disable transparent huge pages for better performance
disable-thp yes

############################## APPEND ONLY FILE ###############################

# Enable AOF persistence
appendonly yes

# AOF filename
appendfilename "appendonly.aof"

# AOF fsync policy:
# always: fsync every write (slow, safest)
# everysec: fsync once per second (compromise)
# no: don't fsync, let OS decide (fastest, less safe)
appendfsync everysec

# Prevent fsync during rewrites
no-appendfsync-on-rewrite no

# AOF rewrite trigger
auto-aof-rewrite-percentage 100
auto-aof-rewrite-min-size 64mb

# Load truncated AOF files
aof-load-truncated yes

# Use RDB-AOF hybrid persistence
aof-use-rdb-preamble yes

################################ LUA SCRIPTING  ###############################

# Max execution time for Lua scripts (milliseconds)
lua-time-limit 5000

################################## SLOW LOG ###################################

# Log queries slower than N microseconds
slowlog-log-slower-than 10000

# Maximum length of slow log
slowlog-max-len 128

################################ LATENCY MONITOR ##############################

# Enable latency monitoring
latency-monitor-threshold 100

############################# EVENT NOTIFICATION ##############################

# Keyspace notifications for performance monitoring
notify-keyspace-events "Ex"

############################### ADVANCED CONFIG ###############################

# Hash table configuration
hash-max-ziplist-entries 512
hash-max-ziplist-value 64

# List configuration
list-max-ziplist-size -2
list-compress-depth 0

# Set configuration  
set-max-intset-entries 512

# Sorted set configuration
zset-max-ziplist-entries 128
zset-max-ziplist-value 64

# HyperLogLog configuration
hll-sparse-max-bytes 3000

# Streams configuration
stream-node-max-bytes 4096
stream-node-max-entries 100

# Active rehashing
activerehashing yes

# Client output buffer limits
client-output-buffer-limit normal 0 0 0
client-output-buffer-limit slave 256mb 64mb 60
client-output-buffer-limit pubsub 32mb 8mb 60

# Client query buffer limit
client-query-buffer-limit 1gb

# Protocol buffer limit
proto-max-bulk-len 512mb

# Frequency of background tasks
hz 10

# Enable dynamic HZ
dynamic-hz yes

# AOF rewrite incremental fsync
aof-rewrite-incremental-fsync yes

# RDB save incremental fsync
rdb-save-incremental-fsync yes

# Jemalloc background threads
jemalloc-bg-thread yes

################################## MODULES ####################################

# Load Redis modules
# loadmodule /path/to/module.so

################################## PERFORMANCE ############################

# Performance monitoring specific settings

# Database 0: General application cache
# Database 1: Session storage  
# Database 2: Performance metrics
# Database 3: Analytics data
# Database 4: Feature flags
# Database 5: Rate limiting
# Database 6: Temporary data
# Database 7-15: Reserved for future use

# Key naming conventions:
# perf:* - Performance metrics
# session:* - User sessions
# analytics:* - Analytics data  
# cache:* - General cache
# flag:* - Feature flags
# rate:* - Rate limiting data

# Example key TTLs:
# Performance metrics: 1 hour (3600 seconds)
# Sessions: 24 hours (86400 seconds)  
# Analytics: 7 days (604800 seconds)
# Cache: Variable based on content
# Rate limiting: 1 minute to 1 hour

# Memory optimization for performance data
# Use appropriate data structures for different types of data:
# - Strings for simple key-value pairs
# - Hashes for structured data (user sessions, performance metrics)
# - Lists for time-series data  
# - Sets for unique collections
# - Sorted sets for rankings and time-based queries
# - HyperLogLog for cardinality estimation

# Example configuration for performance monitoring:
# SET perf:lcp:timestamp value EX 3600
# HSET session:user123 last_activity timestamp EX 86400
# LPUSH analytics:events event_data
# ZADD perf:response_times timestamp value