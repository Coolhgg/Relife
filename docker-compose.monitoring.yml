# Production Monitoring Deployment for Relife Smart Alarm
version: "3.8"

networks:
  monitoring-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
  relife-network:
    external: true

volumes:
  prometheus-data:
    driver: local
  alertmanager-data:
    driver: local
  grafana-data:
    driver: local

services:
  # Prometheus - Metrics collection and alerting
  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: relife-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--storage.tsdb.retention.time=90d"
      - "--storage.tsdb.wal-compression"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--web.enable-lifecycle"
      - "--web.enable-admin-api"
      - "--web.external-url=https://prometheus.relife.app"
      - "--log.level=info"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./monitoring/prometheus/alerts:/etc/prometheus/rules:ro
      - prometheus-data:/prometheus
    networks:
      - monitoring-network
      - relife-network
    environment:
      - TZ=UTC
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:9090/-/healthy",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.relife.app`)"
      - "traefik.http.routers.prometheus.tls=true"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"

  # AlertManager - Alert routing and notifications
  alertmanager:
    image: prom/alertmanager:v0.25.0
    container_name: relife-alertmanager
    restart: unless-stopped
    ports:
      - "9093:9093"
    command:
      - "--config.file=/etc/alertmanager/alertmanager.yml"
      - "--storage.path=/alertmanager"
      - "--web.external-url=https://alertmanager.relife.app"
      - "--cluster.listen-address=0.0.0.0:9094"
      - "--log.level=info"
    volumes:
      - ./monitoring/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
      - ./monitoring/alertmanager/templates:/etc/alertmanager/templates:ro
      - alertmanager-data:/alertmanager
    networks:
      - monitoring-network
    environment:
      - TZ=UTC
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SLACK_WEBHOOK_URL=${SLACK_WEBHOOK_URL}
      - DISCORD_WEBHOOK_URL=${DISCORD_WEBHOOK_URL}
      - PAGERDUTY_ROUTING_KEY_CRITICAL=${PAGERDUTY_ROUTING_KEY_CRITICAL}
      - PAGERDUTY_ROUTING_KEY_URGENT=${PAGERDUTY_ROUTING_KEY_URGENT}
      - WEBHOOK_AUTH_TOKEN=${WEBHOOK_AUTH_TOKEN}
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:9093/-/healthy",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.alertmanager.rule=Host(`alertmanager.relife.app`)"
      - "traefik.http.routers.alertmanager.tls=true"
      - "traefik.http.services.alertmanager.loadbalancer.server.port=9093"

  # Grafana - Dashboards and visualization
  grafana:
    image: grafana/grafana:10.0.0
    container_name: relife-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-relife-admin-2024}
      - GF_SERVER_ROOT_URL=https://grafana.relife.app
      - GF_SERVER_SERVE_FROM_SUB_PATH=false
      - GF_DATABASE_TYPE=postgres
      - GF_DATABASE_HOST=${POSTGRES_HOST:-postgres:5432}
      - GF_DATABASE_NAME=${GRAFANA_DB_NAME:-grafana}
      - GF_DATABASE_USER=${GRAFANA_DB_USER:-grafana}
      - GF_DATABASE_PASSWORD=${GRAFANA_DB_PASSWORD}
      - GF_SMTP_ENABLED=true
      - GF_SMTP_HOST=${SMTP_HOST:-smtp.gmail.com:587}
      - GF_SMTP_USER=${SMTP_USER}
      - GF_SMTP_PASSWORD=${SMTP_PASSWORD}
      - GF_SMTP_FROM_ADDRESS=grafana@relife.app
      - GF_SMTP_FROM_NAME="Relife Monitoring"
      - GF_ALERTING_ENABLED=true
      - GF_UNIFIED_ALERTING_ENABLED=true
      - GF_FEATURE_TOGGLES_ENABLE=ngalert
      - GF_INSTALL_PLUGINS=grafana-piechart-panel,grafana-worldmap-panel,grafana-clock-panel
      - GF_SECURITY_COOKIE_SECURE=true
      - GF_ANALYTICS_REPORTING_ENABLED=false
      - GF_ANALYTICS_CHECK_FOR_UPDATES=false
      - TZ=UTC
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning:ro
    networks:
      - monitoring-network
      - relife-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.relife.app`)"
      - "traefik.http.routers.grafana.tls=true"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"

  # Node Exporter - System metrics
  node-exporter:
    image: prom/node-exporter:v1.6.0
    container_name: relife-node-exporter
    restart: unless-stopped
    ports:
      - "9100:9100"
    command:
      - "--path.procfs=/host/proc"
      - "--path.sysfs=/host/sys"
      - "--path.rootfs=/rootfs"
      - "--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)"
      - "--collector.textfile.directory=/var/lib/node_exporter/textfile_collector"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /var/lib/node_exporter/textfile_collector:/var/lib/node_exporter/textfile_collector:ro
    networks:
      - monitoring-network
    environment:
      - TZ=UTC

  # Pushgateway - For batch job metrics
  pushgateway:
    image: prom/pushgateway:v1.6.0
    container_name: relife-pushgateway
    restart: unless-stopped
    ports:
      - "9091:9091"
    command:
      - "--web.enable-admin-api"
      - "--log.level=info"
    networks:
      - monitoring-network
    environment:
      - TZ=UTC
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:9091/-/healthy",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  # Metrics Collector - Custom business metrics
  metrics-collector:
    build:
      context: .
      dockerfile: monitoring/Dockerfile.metrics-collector
    container_name: relife-metrics-collector
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=production
      - PUSHGATEWAY_URL=http://pushgateway:9091
      - SUPABASE_URL=${VITE_SUPABASE_URL}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - ANALYTICS_ENDPOINT=${VITE_ANALYTICS_ENDPOINT}
      - COLLECT_BUSINESS_METRICS=true
      - COLLECT_PERFORMANCE_METRICS=true
      - COLLECT_MOBILE_METRICS=true
      - COLLECT_SECURITY_METRICS=true
      - COLLECTOR_PORT=8080
      - TZ=UTC
    volumes:
      - ./monitoring/scripts:/app/scripts:ro
    networks:
      - monitoring-network
      - relife-network
    depends_on:
      - pushgateway
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Exporter - Web server metrics
  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:0.11.0
    container_name: relife-nginx-exporter
    restart: unless-stopped
    ports:
      - "9113:9113"
    command:
      - "-nginx.scrape-uri=http://relife-app-prod/nginx_status"
    networks:
      - monitoring-network
      - relife-network
    environment:
      - TZ=UTC

  # Redis Exporter - Cache metrics (if using Redis)
  redis-exporter:
    image: oliver006/redis_exporter:v1.44.0
    container_name: relife-redis-exporter
    restart: unless-stopped
    ports:
      - "9121:9121"
    environment:
      - REDIS_ADDR=${REDIS_URL:-redis:6379}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - TZ=UTC
    networks:
      - monitoring-network
      - relife-network
